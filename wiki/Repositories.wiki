#Aca cuento como es la arquitectura para armar un repositorio...

= Introduction =

Como en teoría podríamos tener varios lugares de donde sacar los datos, se pensó la aplicación para dejar abierta la posibilidad de introducir nuevos repositorios según el origen de ellos. En principio solo vamos a crear los repositorios con datos que originan de la base mapeada con Hibernate (en el momento MySql) y lo que esta en memoria.

= Details =

*Base*: como acá esta el core de la aplicación, alojamos las clases genéricas para cualquier repositorio. Estas son:

_AbstractRepositoryFinder.java_ : el finder abstracto, define que repositorios se pueden "encontrar".

_HibernateBaseRepository.java_ : se definen los los metodos genericos para cualquier repositorio hibernate.

HibernateRepositoryFinder.java : un finder contrecto de repositorios de hibernate. Si bien no tiene nada, se usa para inyeccion de dependencias en el contexto de hibernate (ver context/config/repositoriesApplicationContext.xml)

MemoryRepositoryFinder.java : un finder conctreto de repositorios de objetos de memoria. Igual que el anterior no tiene nada por el mismo motivo.




Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages